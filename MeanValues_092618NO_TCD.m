%% Mean Values FOR NO TCD% Script allows user to input file and select certain regions on graphs to take means of. The means are then outputted in an excel file.%Written by: Andrew Baskharon%Date: 11/15/17% Added section to to find comments in originial time array 't' and add% them to the modified 'to', plots with comments now. - AB - 01/29/18clearclose allclcClock = fix(clock);set(0, 'DefaulttextInterpreter', 'none') %change text interpreter so no longer creates subscripts in titles%% Section 1 : Importing AlignedClean Filesinitials = inputdlg('Please enter you initials:');current_directoy = cd;filterspec = [ current_directoy '\*clean.mat'];Title = 'Pick AlignedClean File to Take Means of:';[Array_of_file_names,pathname_folder] = uigetfile(filterspec,Title, 'MultiSelect', 'on');cd(pathname_folder);if isempty(Array_of_file_names)    return;end% build arrayif iscell (Array_of_file_names)    N_looping =length(Array_of_file_names);else    N_looping=1;endrow_count=1;%% Section 1a : Assigning variablesfor i=1 :N_looping    data_counter =i;    % Select two locations    close all    hold off    clear BV_norm MBV_norm  SBV_norm DBV_norm bv_f_norm MBVi SBVi DBVi MBVicm SBVicm DBVicm DBVseg SBVseg SBVseg_cut DBVseg_cut SBVsegcm_cut DBVsegcm_cut BVsegcm_cut    % open file    if iscell (Array_of_file_names)        infile = Array_of_file_names(i);        study = Array_of_file_names(i);        infile1 = [pathname_folder infile];        infile1 = cell2mat([pathname_folder infile]);    else        infile = Array_of_file_names;        infile1 = [pathname_folder infile];        study = Array_of_file_names; %not sure if the correct    end    %    dumy1=infile1;    dumy=infile;    load(infile1);        if iscell(dumy)        file_name = mat2str(cell2mat(dumy));    else        file_name = (dumy);    end        name = [file_name(1:end-4) '_MeanValues'];        new_dir=pathname_folder;    pathname_folder= current_directoy;    cd(pathname_folder)        %% Section 1b : Determine start and stop time for each section        CCP_ICH = zeros(length(iRRi)-2,1);    CCP = zeros(length(iRRi)-2,1);    Question = 'Output File Already Exists, Overwrite?';    Qtitle = 'Mean Value Analysis';        button = 0;    t_name1='';    t_name2='';        % time_interval =time(iRRi);            %     orignal_num_artery = num_artery;    %    %     BV_clean_orig = BV;    %    %     BV_norm_original_clean=BV_norm;    %     MBV_norm_original_clean=MBV_norm;    %     SBV_norm_original_clean=SBV_norm;    %     DBV_norm_original_clean=DBV_norm;    %     bv_f_norm_original_clean=bv_f_norm;    %    %     % is this to remove a bad artery?    %     BV(:,Arter_v) = [];    %     BV_norm(:,Arter_v) =[];    %     MBV_norm(:,Arter_v) =[];    %     SBV_norm(:,Arter_v)=[];    %     DBV_norm(:,Arter_v)=[];    %     bv_f_norm(:,Arter_v)=[];    %     bv_f(:,Arter_v)=[];    %     MBVcm(:,Arter_v)=[];    %     DBVcm(:,Arter_v)=[];    %     SBVcm(:,Arter_v)=[];    %     SBVi(:,Arter_v) =[];    %     MBVi(:,Arter_v) =[];    %     DBVi(:,Arter_v) =[];    %     SBVicm(:,Arter_v)=[];    %     MBVicm(:,Arter_v)=[];    %     DBVicm(:,Arter_v)=[];    %     BVi(:,Arter_v)=[];    %     bv_f_mean(:,Arter_v)=[];    %    %     num_artery=num_artery-length(Arter_v);    %    %     co2=CO2;    %     tco2=time;    %    %     SR = 100;end%% Section 2: Plot Waveforms & Select Regions of Interest%Generates folder for current bin in order to save figures and%files here.mydir = pwd;idcs = strfind(mydir,'\');newdir = mydir(1:idcs(end)-1);foldername = name;mkdir(newdir,foldername);newcd = [newdir '\' foldername];cd (newcd);%end of section to generate directoryif exist('bv_fo_cm') ==0    if exist('bv_f')==1        bv_fo_cm = BVcm_int(intwf1,:);    else        bv_fo_cm=zeros(length(intwf1),1);    endendif exist('MBVcmo') ==0 || exist('SBVcmo') ==0 || exist('DBVcmo') ==0    MBVcmo = MBVcm(intbbb1,:);    SBVcmo = SBVcm(intbbb1,:);    DBVcmo = DBVcm(intbbb1,:);endif exist('MBVcmon') ==0 || exist('SBVcmon') ==0 || exist('DBVcmon') ==0    MBVcmon = MBVcmo(ikeep,:);    SBVcmon = SBVcmo(ikeep,:);    DBVcmon = DBVcmo(ikeep,:);endco2=CO2;tco2=time;SR = 100;scale=round(1/mean(diff(to))); %One secondprompt={'Enter number of windows to take mean of(4 max):'};name1 = 'Number of windows';defaultans = {'2'};answer = inputdlg(prompt,name1,[1 40],defaultans);number_of_loops=str2double(answer);prompt1 = {'Enter length of each window(in seconds)?'};name2 = 'Width of window';defaultans1 = {'20'};answer1 = inputdlg(prompt1,name2,[1 40],defaultans1);width_of_windowi = str2double(answer1);width_of_window = width_of_windowi * scale;clear prompt prompt1 name2 name1 defaultans defaultans1 answer answer1button=0;HeartRate = 1000./RRi*60;f = [1 2 3 4];index_v=1:length(to);iindex=(1:index_v);increm = 5*scale;%     one_min=60/mean(diff(t));%     one_sec=1/mean(diff(t));%     increm = 3/mean(diff(t));%     c1 = [bv_f   bp_f HeartRate etCO2 ];%     [length_c1 column_c1] = size(c1);%     clear length_c1;pos = round(length(to) / 5);x1=(iindex);x2=(width_of_window);x3=round(x2+(pos));x4=round(x3+(width_of_window));x5=round(x4+(pos));x6=round(x5+(width_of_window));x7=round(x6+ pos);x8=round(x7+ width_of_window);%     y1=5; y2=mean(max(c1))*1.25;chanmeans = [bp_f' co2(1:size(bp_f))];y1= 0.1; y2=mean(max(chanmeans));x1_reset=x1;  x2_reset=x2;x3_reset=x3;  x4_reset=x4;x5_reset=x5;  x6_reset=x6;x7_reset=x7;  x8_reset=x8;% Set default figure size to near maximum of screen size%         scrsz = get(0,'ScreenSize');%         position_default = [0.01*scrsz(3) 0.07*scrsz(4) 0.98*scrsz(3) 0.85*scrsz(4)];%         set(gcf,'position',position_default)%slashes = findstr(infile,'\');slashes = infile;plot_title = [infile ' (Clean Waveforms)   ' datestr(now)];% Plot parametersfs = 'fontsize';            % save fontsize field propertyfs_title = 14;              % fontsize for titlesfs_label = 12;              % fontsize for axis labelslw = 'LineWidth';           % save linewidth field propertylw_thin = 0.3;              % linewidth for thin lineslw_thick = 2;               % linewidth for thicker linesms = 'markersize';          % save markersize field propertyms_large = 10;              % markersize for large pointsnum_plots = 5;num_subplots = num_artery + num_plots;if num_artery ==1    titl = {'bp','mca', 'carotid','diameter','hr', 'co2'};elseif num_artery ==2;    titl = {'bp','mca','aca', 'carotid','diameter','hr', 'co2'};else    titl = {'bp','carotid','diameter','hr','co2'};endttodiff = (length(t)/length(to));toidx = round(markers_Index ./ ttodiff);%added to find where comments are located on new time vectorif toidx(1) ==0    toidx(1) = 1;endfigure(1);while button==0    clf    set(gcf,'doublebuffer','on');    % checks to make sure x indices are not less than 0;    for xi=1:8        var_x = eval(strcat('x',num2str(xi)));        if var_x <= iindex            eval(['x' num2str(xi) '=' num2str(iindex)]);        end                if var_x >= max(index_v)-(iindex)            %                var_x = length(t);            eval(['x' num2str(xi) '=' num2str(max(index_v)-(iindex))]);        end    end        for bs = 1:length(titl)        if strcmp(titl(bs),'bp')==1            subplot(num_subplots,1,1)            plot(to,bp_fo, 'b', lw, lw_thin), hold on;            plot(tRRio,MBPo,'k', lw, lw_thick),            plot(tRRio,SBPo,'r', lw, lw_thick),            plot(tRRio,DBPo,'r', lw, lw_thick), hold on;            ylabel({'Arterial';'Blood Pressure';'(mmHg)'}, fs, fs_label)            axis tight            yl = ylim;            yl(1) = yl(1)-yl(2)*.05;            yl(2) = yl(2)+yl(2)*.05;            ylim(yl);                    elseif strcmp(titl(bs),'mca')==1            subplot(num_subplots,1,2)            plot(to,bv_fo_cm(:,1), 'g', lw, lw_thin), hold on;            plot(tRRio,MBVcmon(:,1),'k', lw, lw_thick),            plot(tRRio,SBVcmon(:,1),'r', lw, lw_thick),            plot(tRRio,DBVcmon(:,1),'r', lw, lw_thick), hold on;            ylabel({cell2mat(labels(1));'(CMs)'}, fs, fs_label);                        axis tight            yl = ylim;            yl(1) = yl(1)-yl(2)*.05;            yl(2) = yl(2)+yl(2)*.05;            ylim(yl);                    elseif strcmp(titl(bs),'aca') ==1            subplot(num_subplots,1,3)            plot(to,bv_fo_cm(:,2), 'g', lw, lw_thin), hold on;            plot(tRRio,MBVcmon(:,2),'k', lw, lw_thick),            plot(tRRio,SBVcmon(:,2),'r', lw, lw_thick),            plot(tRRio,DBVcmon(:,2),'r', lw, lw_thick), hold on;            ylabel({cell2mat(labels(2));'(CMs)'}, fs, fs_label);                        axis tight            yl = ylim;            yl(1) = yl(1)-yl(2)*.05;            yl(2) = yl(2)+yl(2)*.05;            ylim(yl);                    elseif strcmp(titl(bs),'carotid')==1            subplot(num_subplots,1,num_artery+2)            plot(tRRio,MBVel(:,1),'-k*'); hold on;            axis tight            yl = ylim;            yl(1) = yl(1)-yl(2)*.05;            yl(2) = yl(2)+yl(2)*.05;            ylim(yl);            ylabel({'Carotid';'(cm/s)'}, fs, fs_label);        elseif strcmp(titl(bs),'diameter')==1            subplot(num_subplots,1,num_artery+3)            plot(tRRio,MBVel(:,2),'-b*');            axis tight            %         meanDiamBAo= mean(DiamBAo((round(length(DiamBAo)/4)):((round(length(DiamBAo)/4))*3)));            %         stdDiamBAo = std(DiamBAo((round(length(DiamBAo)/4)):((round(length(DiamBAo)/4))*3)));            %         yl(1) = meanDiamBAo-stdDiamBAo*4;            %         yl(2) = meanDiamBAo+stdDiamBAo*4;            %         ylim(yl);            yl = ylim;            yl(1) = yl(1)-yl(2)*.05;            yl(2) = yl(2)+yl(2)*.05;            ylim(yl);            ylabel({'Diameter';'(cm)'}, fs, fs_label)        elseif strcmp(titl(bs),'hr')==1            subplot(num_subplots,1,num_artery+4)            plot(tHRo,HRo,'r', lw, lw_thick), hold on;            ylabel('HR (bpm)', fs, fs_label)                        axis tight            yl = ylim;            yl(1) = yl(1)-yl(2)*.05;            yl(2) = yl(2)+yl(2)*.05;            ylim(yl);                    elseif strcmp(titl(bs),'co2')==1                        subplot(num_subplots,1,num_artery+5)            plot(tco2o,CO2o, 'g', lw, lw_thin), hold on;            plot(tetCO2o,etCO2o,'r', lw, lw_thick), hold on;            ylabel('etCO2 (mmHg)', fs, fs_label);                        axis tight            if isempty(ticktimes(comtick))==0                for txt=1:length(markers)                    %             tetx_handle = text (to(toidx(txt)) ,bv_fo(toidx(txt),figcont),markers{txt});                    %             set(tetx_handle,'Color','r','FontSize',14,'Rotation',90)                end            end            yl = ylim;            yl(1) = yl(1)-yl(2)*.05;            yl(2) = yl(2)+yl(2)*.05;            ylim(yl);            xlabel('Time (s)', fs, fs_label);        end                hold on;                if number_of_loops == 1                        v= [t(x1) y1; t(x1) y2; t(x2) y2; t(x2) y1];            patch('Faces',f,'Vertices',v,'EdgeColor','black','FaceColor','none','LineWidth',2);                        pb5 = uicontrol(gcf,'Style','pushbutton','String','T1+','units','normalized','Position',[.92 .9 .03 .03],'Callback','x1=round(x1+increm);x2=round(x2+increm); uiresume;');            pb6 = uicontrol(gcf,'Style','pushbutton','String','T1-','units','normalized','Position',[.92 .87 .03 .03],'Callback','x1=round(x1-increm);x2=round(x2-increm); uiresume;');            pb7 = uicontrol(gcf,'Style','pushbutton','String','T1++','units','normalized','Position',[.92 .84 .03 .03],'Callback','x1=round(x1+increm*3);x2=round(x2+increm*3); uiresume;');            pb8 = uicontrol(gcf,'Style','pushbutton','String','T1--','units','normalized','Position',[.92 .81 .03 .03],'Callback','x1=round(x1-increm*3);x2=round(x2-increm*3); uiresume;');            pb22 = uicontrol(gcf,'Style','pushbutton','String','T1 +5s','units','normalized','Position',[.96 .9 .03 .03],'Callback','x2=round(x2+increm); uiresume;');            pb26 = uicontrol(gcf,'Style','pushbutton','String','T1 -5s','units','normalized','Position',[.96 .87 .03 .03],'Callback','x2=round(x2-increm); uiresume;');            pb30 = uicontrol(gcf,'Style','pushbutton','String','T1 Reset','units','normalized','Position',[.96 .84 .03 .03],'Callback','x1=x1_reset; x2=x2_reset; uiresume;');                    elseif number_of_loops == 2                        v= [t(x1) y1; t(x1) y2; t(x2) y2; t(x2) y1];            v2=[t(x3) y1; t(x3) y2; t(x4) y2; t(x4) y1];            patch('Faces',f,'Vertices',v,'EdgeColor','black','FaceColor','none','LineWidth',2);            patch('Faces',f,'Vertices',v2,'EdgeColor','red','FaceColor','none','LineWidth',2);                        pb5 = uicontrol(gcf,'Style','pushbutton','String','T1+','units','normalized','Position',[.92 .9 .03 .03],'Callback','x1=round(x1+increm);x2=round(x2+increm); uiresume;');            pb6 = uicontrol(gcf,'Style','pushbutton','String','T1-','units','normalized','Position',[.92 .87 .03 .03],'Callback','x1=round(x1-increm);x2=round(x2-increm); uiresume;');            pb7 = uicontrol(gcf,'Style','pushbutton','String','T1++','units','normalized','Position',[.92 .84 .03 .03],'Callback','x1=round(x1+increm*3);x2=round(x2+increm*3); uiresume;');            pb8 = uicontrol(gcf,'Style','pushbutton','String','T1--','units','normalized','Position',[.92 .81 .03 .03],'Callback','x1=round(x1-increm*3);x2=round(x2-increm*3); uiresume;');            pb22 = uicontrol(gcf,'Style','pushbutton','String','T1 +5s','units','normalized','Position',[.96 .9 .03 .03],'Callback','x2=round(x2+increm); uiresume;');            pb26 = uicontrol(gcf,'Style','pushbutton','String','T1 -5s','units','normalized','Position',[.96 .87 .03 .03],'Callback','x2=round(x2-increm); uiresume;');            pb30 = uicontrol(gcf,'Style','pushbutton','String','T1 Reset','units','normalized','Position',[.96 .84 .03 .03],'Callback','x1=x1_reset; x2=x2_reset; uiresume;');                        pb9 = uicontrol(gcf,'Style','pushbutton','String','T2+','units','normalized','Position',[.92 .72 .03 .03],'Callback','x3=round(x3+increm);x4=round(x4+increm); uiresume;');            pb10 = uicontrol(gcf,'Style','pushbutton','String','T2-','units','normalized','Position',[.92 .69 .03 .03],'Callback','x3=round(x3-increm);x4=round(x4-increm); uiresume;');            pb11 = uicontrol(gcf,'Style','pushbutton','String','T2++','units','normalized','Position',[.92 .66 .03 .03],'Callback','x3=round(x3+increm*3);x4=round(x4+increm*3); uiresume;');            pb12 = uicontrol(gcf,'Style','pushbutton','String','T2--','units','normalized','Position',[.92 .63 .03 .03],'Callback','x3=round(x3-increm*3);x4=round(x4-increm*3); uiresume;');            pb23 = uicontrol(gcf,'Style','pushbutton','String','T2 +5s','units','normalized','Position',[.96 .72 .03 .03],'Callback','x4=round(x4+increm); uiresume;');            pb27 = uicontrol(gcf,'Style','pushbutton','String','T2 -5s','units','normalized','Position',[.96 .69 .03 .03],'Callback','x4=round(x4-increm); uiresume;');            pb31 = uicontrol(gcf,'Style','pushbutton','String','T2 Reset','units','normalized','Position',[.96 .66 .03 .03],'Callback','x3=x3_reset; x4=x4_reset; uiresume;');                    elseif number_of_loops ==3                        v= [t(x1) y1; t(x1) y2; t(x2) y2; t(x2) y1];            v2=[t(x3) y1; t(x3) y2; t(x4) y2; t(x4) y1];            v3=[t(x5) y1; t(x5) y2; t(x6) y2; t(x6) y1];            patch('Faces',f,'Vertices',v,'EdgeColor','black','FaceColor','none','LineWidth',2);            patch('Faces',f,'Vertices',v2,'EdgeColor','cyan','FaceColor','none','LineWidth',2);            patch('Faces',f,'Vertices',v3,'EdgeColor','red','FaceColor','none','LineWidth',2);                        pb5 = uicontrol(gcf,'Style','pushbutton','String','T1+','units','normalized','Position',[.92 .9 .03 .03],'Callback','x1=round(x1+increm);x2=round(x2+increm); uiresume;');            pb6 = uicontrol(gcf,'Style','pushbutton','String','T1-','units','normalized','Position',[.92 .87 .03 .03],'Callback','x1=round(x1-increm);x2=round(x2-increm); uiresume;');            pb7 = uicontrol(gcf,'Style','pushbutton','String','T1++','units','normalized','Position',[.92 .84 .03 .03],'Callback','x1=round(x1+increm*3);x2=round(x2+increm*3); uiresume;');            pb8 = uicontrol(gcf,'Style','pushbutton','String','T1--','units','normalized','Position',[.92 .81 .03 .03],'Callback','x1=round(x1-increm*3);x2=round(x2-increm*3); uiresume;');            pb22 = uicontrol(gcf,'Style','pushbutton','String','T1 +5s','units','normalized','Position',[.96 .9 .03 .03],'Callback','x2=round(x2+increm); uiresume;');            pb26 = uicontrol(gcf,'Style','pushbutton','String','T1 -5s','units','normalized','Position',[.96 .87 .03 .03],'Callback','x2=round(x2-increm); uiresume;');            pb30 = uicontrol(gcf,'Style','pushbutton','String','T1 Reset','units','normalized','Position',[.96 .84 .03 .03],'Callback','x1=x1_reset; x2=x2_reset; uiresume;');                        pb9 = uicontrol(gcf,'Style','pushbutton','String','T2+','units','normalized','Position',[.92 .72 .03 .03],'Callback','x3=round(x3+increm);x4=round(x4+increm); uiresume;');            pb10 = uicontrol(gcf,'Style','pushbutton','String','T2-','units','normalized','Position',[.92 .69 .03 .03],'Callback','x3=round(x3-increm);x4=round(x4-increm); uiresume;');            pb11 = uicontrol(gcf,'Style','pushbutton','String','T2++','units','normalized','Position',[.92 .66 .03 .03],'Callback','x3=round(x3+increm*3);x4=round(x4+increm*3); uiresume;');            pb12 = uicontrol(gcf,'Style','pushbutton','String','T2--','units','normalized','Position',[.92 .63 .03 .03],'Callback','x3=round(x3-increm*3);x4=round(x4-increm*3); uiresume;');            pb23 = uicontrol(gcf,'Style','pushbutton','String','T2 +5s','units','normalized','Position',[.96 .72 .03 .03],'Callback','x4=round(x4+increm); uiresume;');            pb27 = uicontrol(gcf,'Style','pushbutton','String','T2 -5s','units','normalized','Position',[.96 .69 .03 .03],'Callback','x4=round(x4-increm); uiresume;');            pb31 = uicontrol(gcf,'Style','pushbutton','String','T2 Reset','units','normalized','Position',[.96 .66 .03 .03],'Callback','x3=x3_reset; x4=x4_reset; uiresume;');                        pb13 = uicontrol(gcf,'Style','pushbutton','String','T3+','units','normalized','Position',[.92 .54 .03 .03],'Callback','x5=round(x5+increm);x6=round(x6+increm); uiresume;');            pb14 = uicontrol(gcf,'Style','pushbutton','String','T3-','units','normalized','Position',[.92 .51 .03 .03],'Callback','x5=round(x5-increm);x6=round(x6-increm); uiresume;');            pb15 = uicontrol(gcf,'Style','pushbutton','String','T3++','units','normalized','Position',[.92 .48 .03 .03],'Callback','x5=round(x5+increm*3);x6=round(x6+increm*3); uiresume;');            pb16 = uicontrol(gcf,'Style','pushbutton','String','T3--','units','normalized','Position',[.92 .45 .03 .03],'Callback','x5=round(x5-increm*3);x6=round(x6-increm*3); uiresume;');            pb24 = uicontrol(gcf,'Style','pushbutton','String','T3 +5s','units','normalized','Position',[.96 .54 .03 .03],'Callback','x6=round(x6+increm); uiresume;');            pb28 = uicontrol(gcf,'Style','pushbutton','String','T3 -5s','units','normalized','Position',[.96 .51 .03 .03],'Callback','x6=round(x6-increm); uiresume;');            pb32 = uicontrol(gcf,'Style','pushbutton','String','T3 Reset','units','normalized','Position',[.96 .48 .03 .03],'Callback','x5=x5_reset; x6=x6_reset; uiresume;');                    elseif number_of_loops ==4                        v= [t(x1) y1; t(x1) y2; t(x2) y2; t(x2) y1];            v2=[t(x3) y1; t(x3) y2; t(x4) y2; t(x4) y1];            v3=[t(x5) y1; t(x5) y2; t(x6) y2; t(x6) y1];            v4=[t(x7) y1; t(x7) y2; t(x8) y2; t(x8) y1];            patch('Faces',f,'Vertices',v,'EdgeColor','black','FaceColor','none','LineWidth',2);            patch('Faces',f,'Vertices',v2,'EdgeColor','cyan','FaceColor','none','LineWidth',2);            patch('Faces',f,'Vertices',v3,'EdgeColor','red','FaceColor','none','LineWidth',2);            patch('Faces',f,'Vertices',v4,'EdgeColor','black','FaceColor','none','LineWidth',2);                        pb5 = uicontrol(gcf,'Style','pushbutton','String','T1+','units','normalized','Position',[.92 .9 .03 .03],'Callback','x1=round(x1+increm);x2=round(x2+increm); uiresume;');            pb6 = uicontrol(gcf,'Style','pushbutton','String','T1-','units','normalized','Position',[.92 .87 .03 .03],'Callback','x1=round(x1-increm);x2=round(x2-increm); uiresume;');            pb7 = uicontrol(gcf,'Style','pushbutton','String','T1++','units','normalized','Position',[.92 .84 .03 .03],'Callback','x1=round(x1+increm*3);x2=round(x2+increm*3); uiresume;');            pb8 = uicontrol(gcf,'Style','pushbutton','String','T1--','units','normalized','Position',[.92 .81 .03 .03],'Callback','x1=round(x1-increm*3);x2=round(x2-increm*3); uiresume;');            pb22 = uicontrol(gcf,'Style','pushbutton','String','T1 +5s','units','normalized','Position',[.96 .9 .03 .03],'Callback','x2=round(x2+increm); uiresume;');            pb26 = uicontrol(gcf,'Style','pushbutton','String','T1 -5s','units','normalized','Position',[.96 .87 .03 .03],'Callback','x2=round(x2-increm); uiresume;');            pb30 = uicontrol(gcf,'Style','pushbutton','String','T1 Reset','units','normalized','Position',[.96 .84 .03 .03],'Callback','x1=x1_reset; x2=x2_reset; uiresume;');                        pb9 = uicontrol(gcf,'Style','pushbutton','String','T2+','units','normalized','Position',[.92 .72 .03 .03],'Callback','x3=round(x3+increm);x4=round(x4+increm); uiresume;');            pb10 = uicontrol(gcf,'Style','pushbutton','String','T2-','units','normalized','Position',[.92 .69 .03 .03],'Callback','x3=round(x3-increm);x4=round(x4-increm); uiresume;');            pb11 = uicontrol(gcf,'Style','pushbutton','String','T2++','units','normalized','Position',[.92 .66 .03 .03],'Callback','x3=round(x3+increm*3);x4=round(x4+increm*3); uiresume;');            pb12 = uicontrol(gcf,'Style','pushbutton','String','T2--','units','normalized','Position',[.92 .63 .03 .03],'Callback','x3=round(x3-increm*3);x4=round(x4-increm*3); uiresume;');            pb23 = uicontrol(gcf,'Style','pushbutton','String','T2 +5s','units','normalized','Position',[.96 .72 .03 .03],'Callback','x4=round(x4+increm); uiresume;');            pb27 = uicontrol(gcf,'Style','pushbutton','String','T2 -5s','units','normalized','Position',[.96 .69 .03 .03],'Callback','x4=round(x4-increm); uiresume;');            pb31 = uicontrol(gcf,'Style','pushbutton','String','T2 Reset','units','normalized','Position',[.96 .66 .03 .03],'Callback','x3=x3_reset; x4=x4_reset; uiresume;');                        pb13 = uicontrol(gcf,'Style','pushbutton','String','T3+','units','normalized','Position',[.92 .54 .03 .03],'Callback','x5=round(x5+increm);x6=round(x6+increm); uiresume;');            pb14 = uicontrol(gcf,'Style','pushbutton','String','T3-','units','normalized','Position',[.92 .51 .03 .03],'Callback','x5=round(x5-increm);x6=round(x6-increm); uiresume;');            pb15 = uicontrol(gcf,'Style','pushbutton','String','T3++','units','normalized','Position',[.92 .48 .03 .03],'Callback','x5=round(x5+increm*3);x6=round(x6+increm*3); uiresume;');            pb16 = uicontrol(gcf,'Style','pushbutton','String','T3--','units','normalized','Position',[.92 .45 .03 .03],'Callback','x5=round(x5-increm*3);x6=round(x6-increm*3); uiresume;');            pb24 = uicontrol(gcf,'Style','pushbutton','String','T3 +5s','units','normalized','Position',[.96 .54 .03 .03],'Callback','x6=round(x6+increm); uiresume;');            pb28 = uicontrol(gcf,'Style','pushbutton','String','T3 -5s','units','normalized','Position',[.96 .51 .03 .03],'Callback','x6=round(x6-increm); uiresume;');            pb32 = uicontrol(gcf,'Style','pushbutton','String','T3 Reset','units','normalized','Position',[.96 .48 .03 .03],'Callback','x5=x5_reset; x6=x6_reset; uiresume;');                        pb17 = uicontrol(gcf,'Style','pushbutton','String','T4+','units','normalized','Position',[.92 .36 .03 .03],'Callback','x7=round(x7+increm);x8=round(x8+increm); uiresume;');            pb18 = uicontrol(gcf,'Style','pushbutton','String','T4-','units','normalized','Position',[.92 .33 .03 .03],'Callback','x7=round(x7-increm);x8=round(x8-increm); uiresume;');            pb19 = uicontrol(gcf,'Style','pushbutton','String','T4++','units','normalized','Position',[.92 .3 .03 .03],'Callback','x7=round(x7+increm*3);x8=round(x8+increm*3); uiresume;');            pb20 = uicontrol(gcf,'Style','pushbutton','String','T4--','units','normalized','Position',[.92 .27 .03 .03],'Callback','x7=round(x7-increm*3);x8=round(x8-increm*3); uiresume;');            pb21 = uicontrol(gcf,'Style','pushbutton','String','T4 +5s','units','normalized','Position',[.96 .36 .03 .03],'Callback','x8=round(x8+increm); uiresume;');            pb25 = uicontrol(gcf,'Style','pushbutton','String','T4 -5s','units','normalized','Position',[.96 .33 .03 .03],'Callback','x8=round(x8-increm); uiresume;');            pb29 = uicontrol(gcf,'Style','pushbutton','String','T4 Reset','units','normalized','Position',[.96 .3 .03 .03],'Callback','x7=x7_reset; x8=x8_reset; uiresume;');        end                hold off;    end            pbexit = uicontrol(gcf,'Style','pushbutton','String','Done','units','normalized','Position',[0.93 0.12 .04 .03],'Callback','button = 1; uiresume;');        uiwait(gcf)endhgexport(gcf,'SelectedRegions', hgexport('factorystyle'), 'Format', 'jpeg');close(gcf);%% Section 3: Calculating Mean Values from Selected RegionsDiamInd1 = find(timeBAo >= to(x1) & timeBAo <= to(x2));DiamInd2 = find(timeBAo >= to(x3) & timeBAo <= to(x4));DiamInd3 = find(timeBAo >= to(x5) & timeBAo <= to(x6));DiamInd4 = find(timeBAo >= to(x7) & timeBAo <= to(x8));HRInd1 = find(tHRo >= to(x1) & tHRo <= to(x2));HRInd2 = find(tHRo >= to(x3) & tHRo <= to(x4));HRInd3 = find(tHRo >= to(x5) & tHRo <= to(x6));HRInd4 = find(tHRo >= to(x7) & tHRo <= to(x8));CORInd1 = find(tHRVo >= to(x1) & tHRVo <= to(x2));CORInd2 = find(tHRVo >= to(x3) & tHRVo <= to(x4));CORInd3 = find(tHRVo >= to(x5) & tHRVo <= to(x6));CORInd4 = find(tHRVo >= to(x7) & tHRVo <= to(x8));CBFInd1 = find(tint >= to(x1) & tint <= to(x2));CBFInd2 = find(tint >= to(x3) & tint <= to(x4));CBFInd3 = find(tint >= to(x5) & tint <= to(x6));CBFInd4 = find(tint >= to(x7) & tint <= to(x8));bvmca = bv_fo_cm(:,1);% [rowbv colbv] = size(bv_fo);colbv = 0;if colbv ==2    bvaca = bv_fo_cm(:,2);    SMCA = SBVcmon(:,1);    MMCA = MBVcmon(:,1);    DMCA = DBVcmon(:,1);    SACA = SBVcmon(:,2);    MACA = MBVcmon(:,2);    DACA = DBVcmon(:,2);elseif colbv ==1    bvaca = NaN(1,length(bvmca));    SMCA = SBVcmon(:,1);    MMCA = MBVcmon(:,1);    DMCA = DBVcmon(:,1);    SACA = NaN(1,length(SMCA));    MACA = NaN(1,length(MMCA));    DACA = NaN(1,length(DMCA));else    SMCA = SBVcmon(:,1);    MMCA = MBVcmon(:,1);    DMCA = DBVcmon(:,1);    SACA = NaN(1,length(SMCA));    MACA = NaN(1,length(MMCA));    DACA = NaN(1,length(DMCA));end%Cerebreal Blood Flow per hundred gram of brain tissue is in mL/g.min% CBF_Hgbt = (CBF./ BrainWeight)* 100;% meanBF = mean(CBF_Hgbt);Sveloc = SBVel(:,1);Mveloc = MBVel(:,1);Dveloc = DBVel(:,1);Sdiam = SBVel(:,2);Mdiam = MBVel(:,2);Ddiam = DBVel(:,2);BPInd1 = find(tRRio >= to(x1) & tRRio <= to(x2));BPInd2 = find(tRRio >= to(x3) & tRRio <= to(x4));BPInd3 = find(tRRio >= to(x5) & tRRio <= to(x6));BPInd4 = find(tRRio >= to(x7) & tRRio <= to(x8));CO2Ind1 = find(tetCO2o >= to(x1) & tetCO2o <=to(x2));CO2Ind2 = find(tetCO2o >= to(x3) & tetCO2o <=to(x4));CO2Ind3 = find(tetCO2o >= to(x5) & tetCO2o <=to(x6));CO2Ind4 = find(tetCO2o >= to(x7) & tetCO2o <=to(x8));meancor = MBVel(:,1);meandiam = MBVel(:,2);%calculations for MCA-CVR and ACA-CVR% mcacvr = nanmean(MBPo) / nanmean(MMCA);% acacvr = nanmean(MBPo) / nanmean(MACA);bodypos = questdlg('What Body Position?', 'bp cal', 'standing', 'seated', 'supine', 'standing');if strcmp(bodypos, 'supine') ==1    distm = inputdlg('What is the distance between the finger cuff and the mid-thoracic cavity? (in cm)');    distm = str2double(distm);    for xii = 1:number_of_loops        bpp = eval(strcat('BPInd',num2str(xii)));        p11 = nanmean(MBPo(bpp));        p22 = nanmean(SBPo(bpp));        p33 = nanmean(DBPo(bpp));        hydrombp = p11 + (0.7355 * distm);        hydrosbp = p22 + (0.7355 * distm);        hydrodbp = p33 + (0.7355 * distm);        p1(xii) = hydrombp;        p2(xii) = hydrosbp;        p3(xii) = hydrodbp;        c1(xii) = hydrombp;    endelseif strcmp(bodypos, 'seated') == 1 || strcmp(bodypos, 'standing') == 1    distm = inputdlg('What is the distance between the finger cuff and the heart? (in cm)');    distm = str2double(distm);    fing = questdlg('Is the finger above or below the heart?', 'finger configuration', 'above', 'below', 'below');    cvrdist = inputdlg('What is the distance between the finger cuff and the TCD probe? (in cm)');    cvrdist = str2double(cvrdist);    cuff = questdlg('Is the cuff above (= if person is upside down) or below the TCD probe?', 'cuff configuration', 'above', 'below', 'below');    if strcmp(fing, 'above') ==1        for xii = 1:number_of_loops            bpp = eval(strcat('BPInd',num2str(xii)));            p1 = nanmean(MBPo(bpp));            p2 = nanmean(SBPo(bpp));            p3 = nanmean(DBPo(bpp));            hydrombp = p1 + (0.7355 * distm);            hydrosbp = p2 + (0.7355 * distm);            hydrodbp = p3 + (0.7355 * distm);            p1(xii) = hydrombp;            p2(xii) = hydrosbp;            p3(xii) = hydrodbp;                        clear bpp        end    elseif strcmp(fing,'below') == 1        for xii = 1:number_of_loops            bpp = eval(strcat('BPInd',num2str(xii)));            p11 = nanmean(MBPo(bpp));            p22 = nanmean(SBPo(bpp));            p33 = nanmean(DBPo(bpp));            hydrombp = p11 - (0.7355 * distm);            hydrosbp = p22 - (0.7355 * distm);            hydrodbp = p33 - (0.7355 * distm);            p1(xii) = hydrombp;            p2(xii) = hydrosbp;            p3(xii) = hydrodbp;                        clear bpp        end    end        if strcmp(cuff, 'above') ==1        for xii = 1:number_of_loops            cvri = eval(strcat('BPInd',num2str(xii)));            c11 = nanmean(MBPo(cvri));            hydrombp = c11 + (0.7355 * cvrdist);            c1(xii) = hydrombp;                        clear cvri        end    elseif strcmp(cuff,'below') == 1        for xii = 1:number_of_loops            cvri = eval(strcat('BPInd',num2str(xii)));            c11 = nanmean(MBPo(cvri));            hydrombp = c11 - (0.7355 * cvrdist);            c1(xii) = hydrombp;                        clear cvri        end    endendfor xii = number_of_loops+1:4    p1(xii) = nan;    p2(xii) = nan;    p3(xii) = nan;    c1(xii) = nan;endif number_of_loops == 1    meanbp = nanmean(bp_fo(x1:x2));    %     meanmca = nanmean(bvmca(x1:x2));    %     meanaca = nanmean(bvaca(x1:x2));    %     meanSMCA = nanmean(SMCA(BPInd1));    %     meanMMCA = nanmean(MMCA(BPInd1));    %     MMCAper = (meanMMCA / meanMMCA)*100;    %     meanDMCA = nanmean(DMCA(BPInd1));    %     meanSACA = nanmean(SACA(BPInd1));    %     meanMACA = nanmean(MACA(BPInd1));    %     MACAper = (meanMACA / meanMACA)*100;    %     meanDACA = nanmean(DACA(BPInd1));    meancoratid = nanmean(meancor(BPInd1));    meandiameter = nanmean(meandiam(BPInd1));    meanhr = nanmean(HRo(HRInd1));    meanco2 = nanmean(etCO2o(CO2Ind1));    meanSBP = nanmean(SBPo(BPInd1));    meanMBP = nanmean(MBPo(BPInd1));    meanDBP = nanmean(DBPo(BPInd1));    meanSBDflow = nanmean(SBD_flow(BPInd1));    meanMBDflow = nanmean(MBD_flow(BPInd1));    MBDper = (meanMBDflow / meanMBDflow)*100;    meanDBDflow = nanmean(DBD_flow(BPInd1));    meanCBFHgbt = nanmean(CBF_Hgbt(CBFInd1));    meanSBDHgbt = nanmean(SBD_flow_Hgbt(BPInd1));    meanMBDHgbt = nanmean(MBD_flow_Hgbt(BPInd1));    meanDBDHgbt = nanmean(DBD_flow_Hgbt(BPInd1));    meanCVR = meanMBP/meanMBDflow;    mhydroCVR = c1(1)/ nanmean(MBD_flow(BPInd1));    %     meanMCACVR = meanMBP / meanMMCA;    %     mhydroMCACVR = c1(1)/ meanMMCA;    %     meanACACVR = meanMBP / meanMACA;    %     mhydroACACVR = c1(1)/ meanMACA;    meanStiffness = nanmean(Stiffness(BPInd1));    meanDistensibility = nanmean(Distensibility(BPInd1));    %     meanSBV = nanmean(Sveloc(BPInd1));    %     meanMBV = nanmean(Mveloc(BPInd1));    %     meanDBV = nanmean(Dveloc(BPInd1));    meanSdiam = nanmean(Sdiam(BPInd1));    meanMdiam = nanmean(Mdiam(BPInd1));    meanDdiam = nanmean(Ddiam(BPInd1));        %     allmeans = [meanSMCA meanMMCA MMCAper meanDMCA meanSACA meanMACA MACAper meanDACA meanhr meanco2 meanSBP p2(1) meanMBP p1(1) meanDBP p3(1) meanSBDflow meanMBDflow MBDper meanDBDflow meanSBDHgbt meanMBDHgbt meanDBDHgbt meanCVR mhydroCVR meanMCACVR mhydroMCACVR meanACACVR mhydroACACVR meanStiffness meanDistensibility meanSBV meanMBV meanDBV meanSdiam meanMdiam meanDdiam];        allmeans = [ meanhr meanco2 meanSBP p2(1) meanMBP p1(1) meanDBP p3(1) meanSBDflow meanMBDflow MBDper meanDBDflow meanSBDHgbt meanMBDHgbt meanDBDHgbt meanCVR mhydroCVR meanStiffness meanDistensibility meanSdiam meanMdiam meanDdiam];    elseif number_of_loops ==2    meanbp = nanmean(bp_fo(x1:x2));    %     meanmca = nanmean(bvmca(x1:x2));    %     meanaca = nanmean(bvaca(x1:x2));    %     meanSMCA = nanmean(SMCA(BPInd1));    %     meanMMCA = nanmean(MMCA(BPInd1));    %     MMCAper = (meanMMCA / meanMMCA)*100;    %     meanDMCA = nanmean(DMCA(BPInd1));    %     meanSACA = nanmean(SACA(BPInd1));    %     meanMACA = nanmean(MACA(BPInd1));    %     MACAper = (meanMACA / meanMACA)*100;    %     meanDACA = nanmean(DACA(BPInd1));    meancoratid = nanmean(meancor(BPInd1));    meandiameter = nanmean(meandiam(BPInd1));    meanhr = nanmean(HRo(HRInd1));    meanco2 = nanmean(etCO2o(CO2Ind1));    meanSBP = nanmean(SBPo(BPInd1));    meanMBP = nanmean(MBPo(BPInd1));    meanDBP = nanmean(DBPo(BPInd1));    meanSBDflow = nanmean(SBD_flow(BPInd1));    meanMBDflow = nanmean(MBD_flow(BPInd1));    MBDper = (meanMBDflow / meanMBDflow)*100;    meanDBDflow = nanmean(DBD_flow(BPInd1));    meanCBFHgbt = nanmean(CBF_Hgbt(CBFInd1));    meanSBDHgbt = nanmean(SBD_flow_Hgbt(BPInd1));    meanMBDHgbt = nanmean(MBD_flow_Hgbt(BPInd1));    meanDBDHgbt = nanmean(DBD_flow_Hgbt(BPInd1));    meanCVR = meanMBP/meanMBDflow;    mhydroCVR = c1(1)/ nanmean(MBD_flow(BPInd1));    %     meanMCACVR = meanMBP / meanMMCA;    %     mhydroMCACVR = c1(1)/ meanMMCA;    %     meanACACVR = meanMBP / meanMACA;    %     mhydroACACVR = c1(1)/ meanMACA;    meanStiffness = nanmean(Stiffness(BPInd1));    meanDistensibility = nanmean(Distensibility(BPInd1));    %     meanSBV = nanmean(Sveloc(BPInd1));    %     meanMBV = nanmean(Mveloc(BPInd1));    %     meanDBV = nanmean(Dveloc(BPInd1));    meanSdiam = nanmean(Sdiam(BPInd1));    meanMdiam = nanmean(Mdiam(BPInd1));    meanDdiam = nanmean(Ddiam(BPInd1));        %     meanbp2 = nanmean(bp_fo(x3:x4));    %     meanmca2 = nanmean(bvmca(x3:x4));    %     meanaca2 = nanmean(bvaca(x3:x4));    %     meanSMCA2 = nanmean(SMCA(BPInd2));    %     meanMMCA2 = nanmean(MMCA(BPInd2));    %     MMCAper2 = (meanMMCA2 / meanMMCA)*100;    %     meanDMCA2 = nanmean(DMCA(BPInd2));    %     meanSACA2 = nanmean(SACA(BPInd2));    %     meanMACA2 = nanmean(MACA(BPInd2));    %     MACAper2 = (meanMACA2 / meanMACA)*100;    %     meanDACA2 = nanmean(DACA(BPInd2));    meancoratid2 = nanmean(meancor(BPInd2));    meandiameter2 = nanmean(meandiam(BPInd2));    meanhr2 = nanmean(HRo(HRInd2));    meanco22 = nanmean(etCO2o(CO2Ind2));    meanSBP2 = nanmean(SBPo(BPInd2));    meanMBP2 = nanmean(MBPo(BPInd2));    meanDBP2 = nanmean(DBPo(BPInd2));    meanSBDflow2 = nanmean(SBD_flow(BPInd2));    meanMBDflow2 = nanmean(MBD_flow(BPInd2));    MBDper2 = (meanMBDflow2 / meanMBDflow)*100;    meanDBDflow2 = nanmean(DBD_flow(BPInd2));    meanCBFHgbt2 = nanmean(CBF_Hgbt(CBFInd2));    meanSBDHgbt2 = nanmean(SBD_flow_Hgbt(BPInd2));    meanMBDHgbt2 = nanmean(MBD_flow_Hgbt(BPInd2));    meanDBDHgbt2 = nanmean(DBD_flow_Hgbt(BPInd2));    meanCVR2 = meanMBP2/meanMBDflow2;    mhydroCVR2 = c1(2)/ nanmean(MBD_flow(BPInd2));    %     meanMCACVR2 = meanMBP2 / meanMMCA2;    %     mhydroMCACVR2 = c1(2)/ meanMMCA2;    %     meanACACVR2 = meanMBP2 / meanMACA2;    %     mhydroACACVR2 = c1(2)/ meanMACA2;    meanStiffness2 = nanmean(Stiffness(BPInd2));    meanDistensibility2 = nanmean(Distensibility(BPInd2));    %     meanSBV2 = nanmean(Sveloc(BPInd2));    %     meanMBV2 = nanmean(Mveloc(BPInd2));    %     meanDBV2 = nanmean(Dveloc(BPInd2));    meanSdiam2 = nanmean(Sdiam(BPInd2));    meanMdiam2 = nanmean(Mdiam(BPInd2));    meanDdiam2 = nanmean(Ddiam(BPInd2));        %     allmeans = [meanSMCA meanMMCA MMCAper meanDMCA meanSACA meanMACA MACAper meanDACA meanhr meanco2 meanSBP p2(1) meanMBP p1(1) meanDBP p3(1) meanSBDflow meanMBDflow MBDper meanDBDflow meanSBDHgbt meanMBDHgbt meanDBDHgbt meanCVR mhydroCVR meanMCACVR mhydroMCACVR meanACACVR mhydroACACVR meanStiffness meanDistensibility meanSBV meanMBV meanDBV meanSdiam meanMdiam meanDdiam; meanSMCA2 meanMMCA2 MMCAper2 meanDMCA2 meanSACA2 meanMACA2 MACAper2 meanDACA2 meanhr2 meanco22 meanSBP2 p2(2) meanMBP2 p1(2) meanDBP2 p3(2) meanSBDflow2 meanMBDflow2 MBDper2 meanDBDflow2 meanSBDHgbt2 meanMBDHgbt2 meanDBDHgbt2 meanCVR2 mhydroCVR2 meanMCACVR2 mhydroMCACVR2 meanACACVR2 mhydroACACVR2 meanStiffness2 meanDistensibility2 meanSBV2 meanMBV2 meanDBV2 meanSdiam2 meanMdiam2 meanDdiam2];    allmeans = [ meanhr meanco2 meanSBP p2(1) meanMBP p1(1) meanDBP p3(1) meanSBDflow meanMBDflow MBDper meanDBDflow meanSBDHgbt meanMBDHgbt meanDBDHgbt meanCVR mhydroCVR meanStiffness meanDistensibility meanSdiam meanMdiam meanDdiam; meanhr2 meanco22 meanSBP2 p2(2) meanMBP2 p1(2) meanDBP2 p3(2) meanSBDflow2 meanMBDflow2 MBDper2 meanDBDflow2 meanSBDHgbt2 meanMBDHgbt2 meanDBDHgbt2 meanCVR2 mhydroCVR2 meanStiffness2 meanDistensibility2 meanSdiam2 meanMdiam2 meanDdiam2];    elseif number_of_loops ==3    meanbp = nanmean(bp_fo(x1:x2));    %     meanmca = nanmean(bvmca(x1:x2));    %     meanaca = nanmean(bvaca(x1:x2));    %     meanSMCA = nanmean(SMCA(BPInd1));    %     meanMMCA = nanmean(MMCA(BPInd1));    %     MMCAper = (meanMMCA / meanMMCA)*100;    %     meanDMCA = nanmean(DMCA(BPInd1));    %     meanSACA = nanmean(SACA(BPInd1));    %     meanMACA = nanmean(MACA(BPInd1));    %     MACAper = (meanMACA / meanMACA)*100;    %     meanDACA = nanmean(DACA(BPInd1));    meancoratid = nanmean(meancor(BPInd1));    meandiameter = nanmean(meandiam(BPInd1));    meanhr = nanmean(HRo(HRInd1));    meanco2 = nanmean(etCO2o(CO2Ind1));    meanSBP = nanmean(SBPo(BPInd1));    meanMBP = nanmean(MBPo(BPInd1));    meanDBP = nanmean(DBPo(BPInd1));    meanSBDflow = nanmean(SBD_flow(BPInd1));    meanMBDflow = nanmean(MBD_flow(BPInd1));    MBDper = (meanMBDflow / meanMBDflow)*100;    meanDBDflow = nanmean(DBD_flow(BPInd1));    meanCBFHgbt = nanmean(CBF_Hgbt(CBFInd1));    meanSBDHgbt = nanmean(SBD_flow_Hgbt(BPInd1));    meanMBDHgbt = nanmean(MBD_flow_Hgbt(BPInd1));    meanDBDHgbt = nanmean(DBD_flow_Hgbt(BPInd1));    meanCVR = meanMBP/meanMBDflow;    mhydroCVR = c1(1)/ nanmean(MBD_flow(BPInd1));    %     meanMCACVR = meanMBP / meanMMCA;    %     mhydroMCACVR = c1(1)/ meanMMCA;    %     meanACACVR = meanMBP / meanMACA;    %     mhydroACACVR = c1(1)/ meanMACA;    meanStiffness = nanmean(Stiffness(BPInd1));    meanDistensibility = nanmean(Distensibility(BPInd1));    %     meanSBV = nanmean(Sveloc(BPInd1));    %     meanMBV = nanmean(Mveloc(BPInd1));    %     meanDBV = nanmean(Dveloc(BPInd1));    meanSdiam = nanmean(Sdiam(BPInd1));    meanMdiam = nanmean(Mdiam(BPInd1));    meanDdiam = nanmean(Ddiam(BPInd1));        meanbp2 = nanmean(bp_fo(x3:x4));    %     meanmca2 = nanmean(bvmca(x3:x4));    %     meanaca2 = nanmean(bvaca(x3:x4));    %     meanSMCA2 = nanmean(SMCA(BPInd2));    %     meanMMCA2 = nanmean(MMCA(BPInd2));    %     MMCAper2 = (meanMMCA2 / meanMMCA)*100;    %     meanDMCA2 = nanmean(DMCA(BPInd2));    %     meanSACA2 = nanmean(SACA(BPInd2));    %     meanMACA2 = nanmean(MACA(BPInd2));    %     MACAper2 = (meanMACA2 / meanMACA)*100;    %     meanDACA2 = nanmean(DACA(BPInd2));    meancoratid2 = nanmean(meancor(BPInd2));    meandiameter2 = nanmean(meandiam(BPInd2));    meanhr2 = nanmean(HRo(HRInd2));    meanco22 = nanmean(etCO2o(CO2Ind2));    meanSBP2 = nanmean(SBPo(BPInd2));    meanMBP2 = nanmean(MBPo(BPInd2));    meanDBP2 = nanmean(DBPo(BPInd2));    meanSBDflow2 = nanmean(SBD_flow(BPInd2));    meanMBDflow2 = nanmean(MBD_flow(BPInd2));    MBDper2 = (meanMBDflow2 / meanMBDflow)*100;    meanDBDflow2 = nanmean(DBD_flow(BPInd2));    meanCBFHgbt2 = nanmean(CBF_Hgbt(CBFInd2));    meanSBDHgbt2 = nanmean(SBD_flow_Hgbt(BPInd2));    meanMBDHgbt2 = nanmean(MBD_flow_Hgbt(BPInd2));    meanDBDHgbt2 = nanmean(DBD_flow_Hgbt(BPInd2));    meanCVR2 = meanMBP2/meanMBDflow2;    mhydroCVR2 = c1(2)/ nanmean(MBD_flow(BPInd2));    %     meanMCACVR2 = meanMBP2 / meanMMCA2;    %     mhydroMCACVR2 = c1(2)/ meanMMCA2;    %     meanACACVR2 = meanMBP2 / meanMACA2;    %     mhydroACACVR2 = c1(2)/ meanMACA2;    meanStiffness2 = nanmean(Stiffness(BPInd2));    meanDistensibility2 = nanmean(Distensibility(BPInd2));    %     meanSBV2 = nanmean(Sveloc(BPInd2));    %     meanMBV2 = nanmean(Mveloc(BPInd2));    %     meanDBV2 = nanmean(Dveloc(BPInd2));    meanSdiam2 = nanmean(Sdiam(BPInd2));    meanMdiam2 = nanmean(Mdiam(BPInd2));    meanDdiam2 = nanmean(Ddiam(BPInd2));        meanbp3 = nanmean(bp_fo(x5:x6));    %     meanmca3 = nanmean(bvmca(x5:x6));    %     meanaca3 = nanmean(bvaca(x5:x6));    %     meanSMCA3 = nanmean(SMCA(BPInd3));    %     meanMMCA3 = nanmean(MMCA(BPInd3));    %     MMCAper3 = (meanMMCA3 / meanMMCA)*100;    %     meanDMCA3 = nanmean(DMCA(BPInd3));    %     meanSACA3 = nanmean(SACA(BPInd3));    %     meanMACA3 = nanmean(MACA(BPInd3));    %     MACAper3 = (meanMACA3 / meanMACA)*100;    %     meanDACA3 = nanmean(DACA(BPInd3));    meancoratid3 = nanmean(meancor(BPInd3));    meandiameter3 = nanmean(meandiam(BPInd3));    meanhr3 = nanmean(HRo(HRInd3));    meanco23 = nanmean(etCO2o(CO2Ind3));    meanSBP3 = nanmean(SBPo(BPInd3));    meanMBP3 = nanmean(MBPo(BPInd3));    meanDBP3 = nanmean(DBPo(BPInd3));    meanSBDflow3 = nanmean(SBD_flow(BPInd3));    meanMBDflow3 = nanmean(MBD_flow(BPInd3));    MBDper3 = (meanMBDflow3 / meanMBDflow)*100;    meanDBDflow3 = nanmean(DBD_flow(BPInd3));    meanCBFHgbt3 = nanmean(CBF_Hgbt(CBFInd3));    meanSBDHgbt3 = nanmean(SBD_flow_Hgbt(BPInd3));    meanMBDHgbt3 = nanmean(MBD_flow_Hgbt(BPInd3));    meanDBDHgbt3 = nanmean(DBD_flow_Hgbt(BPInd3));    meanCVR3 = meanMBP3/meanMBDflow3;    mhydroCVR3 = c1(3)/ nanmean(MBD_flow(BPInd3));    %     meanMCACVR3 = meanMBP3 / meanMMCA3;    %     mhydroMCACVR3 = c1(3)/ meanMMCA3;    %     meanACACVR3 = meanMBP3 / meanMACA3;    %     mhydroACACVR3 = c1(3)/ meanMACA3;    meanStiffness3 = nanmean(Stiffness(BPInd3));    meanDistensibility3 = nanmean(Distensibility(BPInd3));    %     meanSBV3 = nanmean(Sveloc(BPInd3));    %     meanMBV3 = nanmean(Mveloc(BPInd3));    %     meanDBV3 = nanmean(Dveloc(BPInd3));    meanSdiam3 = nanmean(Sdiam(BPInd3));    meanMdiam3 = nanmean(Mdiam(BPInd3));    meanDdiam3 = nanmean(Ddiam(BPInd3));            %     allmeans = [meanSMCA meanMMCA MMCAper meanDMCA meanSACA meanMACA MACAper meanDACA meanhr meanco2 meanSBP p2(1) meanMBP p1(1) meanDBP p3(1) meanSBDflow meanMBDflow MBDper meanDBDflow meanSBDHgbt meanMBDHgbt meanDBDHgbt meanCVR mhydroCVR meanMCACVR mhydroMCACVR meanACACVR mhydroACACVR meanStiffness meanDistensibility meanSBV meanMBV meanDBV meanSdiam meanMdiam meanDdiam; meanSMCA2 meanMMCA2 MMCAper2 meanDMCA2 meanSACA2 meanMACA2 MACAper2 meanDACA2 meanhr2 meanco22 meanSBP2 p2(2) meanMBP2 p1(2) meanDBP2 p3(2) meanSBDflow2 meanMBDflow2 MBDper2 meanDBDflow2 meanSBDHgbt2 meanMBDHgbt2 meanDBDHgbt2 meanCVR2 mhydroCVR2 meanMCACVR2 mhydroMCACVR2 meanACACVR2 mhydroACACVR2 meanStiffness2 meanDistensibility2 meanSBV2 meanMBV2 meanDBV2 meanSdiam2 meanMdiam2 meanDdiam2; meanSMCA3 meanMMCA3 MMCAper3 meanDMCA3 meanSACA3 meanMACA3 MACAper3 meanDACA3 meanhr3 meanco23 meanSBP3 p2(3) meanMBP3 p1(3) meanDBP3 p3(3) meanSBDflow3 meanMBDflow3 MBDper3 meanDBDflow3 meanSBDHgbt3 meanMBDHgbt3 meanDBDHgbt3 meanCVR3 mhydroCVR3 meanMCACVR3 mhydroMCACVR3 meanACACVR3 mhydroACACVR3 meanStiffness3 meanDistensibility3 meanSBV3 meanMBV3 meanDBV3 meanSdiam3 meanMdiam3 meanDdiam3];    allmeans = [ meanhr meanco2 meanSBP p2(1) meanMBP p1(1) meanDBP p3(1) meanSBDflow meanMBDflow MBDper meanDBDflow meanSBDHgbt meanMBDHgbt meanDBDHgbt meanCVR mhydroCVR meanStiffness meanDistensibility meanSdiam meanMdiam meanDdiam; meanhr2 meanco22 meanSBP2 p2(2) meanMBP2 p1(2) meanDBP2 p3(2) meanSBDflow2 meanMBDflow2 MBDper2 meanDBDflow2 meanSBDHgbt2 meanMBDHgbt2 meanDBDHgbt2 meanCVR2 mhydroCVR2 meanStiffness2 meanDistensibility2 meanSdiam2 meanMdiam2 meanDdiam2; meanhr3 meanco23 meanSBP3 meanMBP3 p2(3) meanDBP3 p1(3) meanSBDflow3 p3(3) meanMBDflow3 MBDper3 meanDBDflow3 meanSBDHgbt3 meanMBDHgbt3 meanDBDHgbt3 meanCVR3 mhydroCVR3 meanStiffness3 meanDistensibility3 meanSdiam3 meanMdiam3 meanDdiam3];    elseif number_of_loops ==4    meanbp = nanmean(bp_fo(x1:x2));    %     meanmca = nanmean(bvmca(x1:x2));    %     meanaca = nanmean(bvaca(x1:x2));    %     meanSMCA = nanmean(SMCA(BPInd1));    %     meanMMCA = nanmean(MMCA(BPInd1));    %     MMCAper = (meanMMCA / meanMMCA)*100;    %     meanDMCA = nanmean(DMCA(BPInd1));    %     meanSACA = nanmean(SACA(BPInd1));    %     meanMACA = nanmean(MACA(BPInd1));    %     MACAper = (meanMACA / meanMACA)*100;    %     meanDACA = nanmean(DACA(BPInd1));    meancoratid = nanmean(meancor(BPInd1));    meandiameter = nanmean(meandiam(BPInd1));    meanhr = nanmean(HRo(HRInd1));    meanco2 = nanmean(etCO2o(CO2Ind1));    meanSBP = nanmean(SBPo(BPInd1));    meanMBP = nanmean(MBPo(BPInd1));    meanDBP = nanmean(DBPo(BPInd1));    meanSBDflow = nanmean(SBD_flow(BPInd1));    meanMBDflow = nanmean(MBD_flow(BPInd1));    MBDper = (meanMBDflow / meanMBDflow)*100;    meanDBDflow = nanmean(DBD_flow(BPInd1));    meanCBFHgbt = nanmean(CBF_Hgbt(CBFInd1));    meanSBDHgbt = nanmean(SBD_flow_Hgbt(BPInd1));    meanMBDHgbt = nanmean(MBD_flow_Hgbt(BPInd1));    meanDBDHgbt = nanmean(DBD_flow_Hgbt(BPInd1));    meanCVR = meanMBP/meanMBDflow;    mhydroCVR = c1(1)/ nanmean(MBD_flow(BPInd1));    %     meanMCACVR = meanMBP / meanMMCA;    %     mhydroMCACVR = c1(1)/ meanMMCA;    %     meanACACVR = meanMBP / meanMACA;    %     mhydroACACVR = c1(1)/ meanMACA;    meanStiffness = nanmean(Stiffness(BPInd1));    meanDistensibility = nanmean(Distensibility(BPInd1));    %     meanSBV = nanmean(Sveloc(BPInd1));    %     meanMBV = nanmean(Mveloc(BPInd1));    %     meanDBV = nanmean(Dveloc(BPInd1));    meanSdiam = nanmean(Sdiam(BPInd1));    meanMdiam = nanmean(Mdiam(BPInd1));    meanDdiam = nanmean(Ddiam(BPInd1));        meanbp2 = nanmean(bp_fo(x3:x4));    %     meanmca2 = nanmean(bvmca(x3:x4));    %     meanaca2 = nanmean(bvaca(x3:x4));    %     meanSMCA2 = nanmean(SMCA(BPInd2));    %     meanMMCA2 = nanmean(MMCA(BPInd2));    %     MMCAper2 = (meanMMCA2 / meanMMCA)*100;    %     meanDMCA2 = nanmean(DMCA(BPInd2));    %     meanSACA2 = nanmean(SACA(BPInd2));    %     meanMACA2 = nanmean(MACA(BPInd2));    %     MACAper2 = (meanMACA2 / meanMACA)*100;    %     meanDACA2 = nanmean(DACA(BPInd2));    meancoratid2 = nanmean(meancor(BPInd2));    meandiameter2 = nanmean(meandiam(BPInd2));    meanhr2 = nanmean(HRo(HRInd2));    meanco22 = nanmean(etCO2o(CO2Ind2));    meanSBP2 = nanmean(SBPo(BPInd2));    meanMBP2 = nanmean(MBPo(BPInd2));    meanDBP2 = nanmean(DBPo(BPInd2));    meanSBDflow2 = nanmean(SBD_flow(BPInd2));    meanMBDflow2 = nanmean(MBD_flow(BPInd2));    MBDper2 = (meanMBDflow2 / meanMBDflow)*100;    meanDBDflow2 = nanmean(DBD_flow(BPInd2));    meanCBFHgbt2 = nanmean(CBF_Hgbt(CBFInd2));    meanSBDHgbt2 = nanmean(SBD_flow_Hgbt(BPInd2));    meanMBDHgbt2 = nanmean(MBD_flow_Hgbt(BPInd2));    meanDBDHgbt2 = nanmean(DBD_flow_Hgbt(BPInd2));    meanCVR2 = meanMBP2/meanMBDflow2;    mhydroCVR2 = c1(2)/ nanmean(MBD_flow(BPInd2));    %     meanMCACVR2 = meanMBP2 / meanMMCA2;    %     mhydroMCACVR2 = c1(2)/ meanMMCA2;    %     meanACACVR2 = meanMBP2 / meanMACA2;    %     mhydroACACVR2 = c1(2)/ meanMACA2;    meanStiffness2 = nanmean(Stiffness(BPInd2));    meanDistensibility2 = nanmean(Distensibility(BPInd2));    %     meanSBV2 = nanmean(Sveloc(BPInd2));    %     meanMBV2 = nanmean(Mveloc(BPInd2));    %     meanDBV2 = nanmean(Dveloc(BPInd2));    meanSdiam2 = nanmean(Sdiam(BPInd2));    meanMdiam2 = nanmean(Mdiam(BPInd2));    meanDdiam2 = nanmean(Ddiam(BPInd2));        meanbp3 = nanmean(bp_fo(x5:x6));    %     meanmca3 = nanmean(bvmca(x5:x6));    %     meanaca3 = nanmean(bvaca(x5:x6));    %     meanSMCA3 = nanmean(SMCA(BPInd3));    %     meanMMCA3 = nanmean(MMCA(BPInd3));    %     MMCAper3 = (meanMMCA3 / meanMMCA)*100;    %     meanDMCA3 = nanmean(DMCA(BPInd3));    %     meanSACA3 = nanmean(SACA(BPInd3));    %     meanMACA3 = nanmean(MACA(BPInd3));    %     MACAper3 = (meanMACA3 / meanMACA)*100;    %     meanDACA3 = nanmean(DACA(BPInd3));    meancoratid3 = nanmean(meancor(BPInd3));    meandiameter3 = nanmean(meandiam(BPInd3));    meanhr3 = nanmean(HRo(HRInd3));    meanco23 = nanmean(etCO2o(CO2Ind3));    meanSBP3 = nanmean(SBPo(BPInd3));    meanMBP3 = nanmean(MBPo(BPInd3));    meanDBP3 = nanmean(DBPo(BPInd3));    meanSBDflow3 = nanmean(SBD_flow(BPInd3));    meanMBDflow3 = nanmean(MBD_flow(BPInd3));    MBDper3 = (meanMBDflow3 / meanMBDflow)*100;    meanDBDflow3 = nanmean(DBD_flow(BPInd3));    meanCBFHgbt3 = nanmean(CBF_Hgbt(CBFInd3));    meanSBDHgbt3 = nanmean(SBD_flow_Hgbt(BPInd3));    meanMBDHgbt3 = nanmean(MBD_flow_Hgbt(BPInd3));    meanDBDHgbt3 = nanmean(DBD_flow_Hgbt(BPInd3));    meanCVR3 = meanMBP3/meanMBDflow3;    mhydroCVR3 = c1(3)/ nanmean(MBD_flow(BPInd3));    %     meanMCACVR3 = meanMBP3 / meanMMCA3;    %     mhydroMCACVR3 = c1(3)/ meanMMCA3;    %     meanACACVR3 = meanMBP3 / meanMACA3;    %     mhydroACACVR3 = c1(3)/ meanMACA3;    meanStiffness3 = nanmean(Stiffness(BPInd3));    meanDistensibility3 = nanmean(Distensibility(BPInd3));    %     meanSBV3 = nanmean(Sveloc(BPInd3));    %     meanMBV3 = nanmean(Mveloc(BPInd3));    %     meanDBV3 = nanmean(Dveloc(BPInd3));    meanSdiam3 = nanmean(Sdiam(BPInd3));    meanMdiam3 = nanmean(Mdiam(BPInd3));    meanDdiam3 = nanmean(Ddiam(BPInd3));        meanbp4 = nanmean(bp_fo(x7:x8));    %     meanmca4 = nanmean(bvmca(x7:x8));    %     meanaca4 = nanmean(bvaca(x7:x8));    %     meanSMCA4 = nanmean(SMCA(BPInd4));    %     meanMMCA4 = nanmean(MMCA(BPInd4));    %     MMCAper4 = (meanMMCA4 / meanMMCA)*100;    %     meanDMCA4 = nanmean(DMCA(BPInd4));    %     meanSACA4 = nanmean(SACA(BPInd4));    %     meanMACA4 = nanmean(MACA(BPInd4));    %     MACAper4 = (meanMACA4 / meanMACA)*100;    %     meanDACA4 = nanmean(DACA(BPInd4));    meancoratid4 = nanmean(meancor(BPInd4));    meandiameter4 = nanmean(meandiam(BPInd4));    meanhr4 = nanmean(HRo(HRInd4));    meanco24 = nanmean(etCO2o(CO2Ind4));    meanSBP4 = nanmean(SBPo(BPInd4));    meanMBP4 = nanmean(MBPo(BPInd4));    meanDBP4 = nanmean(DBPo(BPInd4));    meanSBDflow4 = nanmean(SBD_flow(BPInd4));    meanMBDflow4 = nanmean(MBD_flow(BPInd4));    MBDper4 = (meanMBDflow4 / meanMBDflow)*100;    meanDBDflow4 = nanmean(DBD_flow(BPInd4));    meanCBFHgbt4 = nanmean(CBF_Hgbt(CBFInd4));    meanSBDHgbt4 = nanmean(SBD_flow_Hgbt(BPInd4));    meanMBDHgbt4 = nanmean(MBD_flow_Hgbt(BPInd4));    meanDBDHgbt4 = nanmean(DBD_flow_Hgbt(BPInd4));    meanCVR4 = meanMBP4/meanMBDflow4;    mhydroCVR4 = c1(4)/ nanmean(MBD_flow(BPInd4));    %     meanMCACVR4 = meanMBP4 / meanMMCA4;    %     mhydroMCACVR4 = c1(4)/ meanMMCA4;    %     meanACACVR4 = meanMBP4 / meanMACA4;    %     mhydroACACVR4 = c1(4)/ meanMACA4;    meanStiffness4 = nanmean(Stiffness(BPInd4));    meanDistensibility4 = nanmean(Distensibility(BPInd4));    %     meanSBV4 = nanmean(Sveloc(BPInd4));    %     meanMBV4 = nanmean(Mveloc(BPInd4));    %     meanDBV4 = nanmean(Dveloc(BPInd4));    meanSdiam4 = nanmean(Sdiam(BPInd4));    meanMdiam4 = nanmean(Mdiam(BPInd4));    meanDdiam4 = nanmean(Ddiam(BPInd4));        %      allmeans = [meanSMCA meanMMCA MMCAper meanDMCA meanSACA meanMACA MACAper meanDACA meanhr meanco2 meanSBP p2(1) meanMBP p1(1) meanDBP p3(1) meanSBDflow meanMBDflow MBDper meanDBDflow meanSBDHgbt meanMBDHgbt meanDBDHgbt meanCVR mhydroCVR meanMCACVR mhydroMCACVR meanACACVR mhydroACACVR meanStiffness meanDistensibility meanSBV meanMBV meanDBV meanSdiam meanMdiam meanDdiam; meanSMCA2 meanMMCA2 MMCAper2 meanDMCA2 meanSACA2 meanMACA2 MACAper2 meanDACA2 meanhr2 meanco22 meanSBP2 p2(2) meanMBP2 p1(2) meanDBP2 p3(2) meanSBDflow2 meanMBDflow2 MBDper2 meanDBDflow2 meanSBDHgbt2 meanMBDHgbt2 meanDBDHgbt2 meanCVR2 mhydroCVR2 meanMCACVR2 mhydroMCACVR2 meanACACVR2 mhydroACACVR2 meanStiffness2 meanDistensibility2 meanSBV2 meanMBV2 meanDBV2 meanSdiam2 meanMdiam2 meanDdiam2; meanSMCA3 meanMMCA3 MMCAper3 meanDMCA3 meanSACA3 meanMACA3 MACAper3 meanDACA3 meanhr3 meanco23 meanSBP3 meanMBP3 p2(3) meanDBP3 p1(3) meanSBDflow3 p3(3) meanMBDflow3 MBDper3 meanDBDflow3 meanSBDHgbt3 meanMBDHgbt3 meanDBDHgbt3 meanCVR3 mhydroCVR3 meanMCACVR3 mhydroMCACVR3 meanACACVR3 mhydroACACVR3 meanStiffness3 meanDistensibility3 meanSBV3 meanMBV3 meanDBV3 meanSdiam3 meanMdiam3 meanDdiam3; meanSMCA4 meanMMCA4 MMCAper4 meanDMCA4 meanSACA4 meanMACA4 MACAper4 meanDACA4 meanhr4 meanco24 meanSBP4 p2(4) meanMBP4 p1(4) meanDBP4 p3(4) meanSBDflow4 meanMBDflow4 MBDper4 meanDBDflow4 meanSBDHgbt4 meanMBDHgbt4 meanDBDHgbt4 meanCVR4 mhydroCVR4 meanMCACVR4 mhydroMCACVR4 meanACACVR4 mhydroACACVR4 meanStiffness4 meanDistensibility4 meanSBV4 meanMBV4 meanDBV4 meanSdiam4 meanMdiam4 meanDdiam4];    allmeans = [ meanhr meanco2 meanSBP p2(1) meanMBP p1(1) meanDBP p3(1) meanSBDflow meanMBDflow MBDper meanDBDflow meanSBDHgbt meanMBDHgbt meanDBDHgbt meanCVR mhydroCVR meanStiffness meanDistensibility meanSdiam meanMdiam meanDdiam; meanhr2 meanco22 meanSBP2 p2(2) meanMBP2 p1(2) meanDBP2 p3(2) meanSBDflow2 meanMBDflow2 MBDper2 meanDBDflow2 meanSBDHgbt2 meanMBDHgbt2 meanDBDHgbt2 meanCVR2 mhydroCVR2 meanStiffness2 meanDistensibility2 meanSdiam2 meanMdiam2 meanDdiam2; meanhr3 meanco23 meanSBP3 meanMBP3 p2(3) meanDBP3 p1(3) meanSBDflow3 p3(3) meanMBDflow3 MBDper3 meanDBDflow3 meanSBDHgbt3 meanMBDHgbt3 meanDBDHgbt3 meanCVR3 mhydroCVR3 meanStiffness3 meanDistensibility3 meanSdiam3 meanMdiam3 meanDdiam3; meanhr4 meanco24 meanSBP4 p2(4) meanMBP4 p1(4) meanDBP4 p3(4) meanSBDflow4 meanMBDflow4 MBDper4 meanDBDflow4 meanSBDHgbt4 meanMBDHgbt4 meanDBDHgbt4 meanCVR4 mhydroCVR4 meanStiffness4 meanDistensibility4 meanSdiam4 meanMdiam4 meanDdiam4];    end%% Section 5: Saving / Ouptutting Files% save([pathname_folder '\' name])% subjec_ID = {strcat(file_name(1:end-5),'_Bin_',num2str(nm))};% titlemean= {'Systolic_MCAv','Mean_MCAv', 'MCAv%', 'Diastolic_MCAv','Systolic_ACAv','ACAv_mean', 'ACAv%', 'Diastolic_ACAv', 'HR', 'CO2','SBP','Hydrostatic_SBP', 'MBP','Hydrostatic_MBP', 'DBP','Hydrostatic_DBP', 'Systolic_Carotid_CBF', 'Mean_Carotid_CBF', '%CBF', 'Diastolic_Carotid_CBF','SBFHgbt Means(per 100g of brain tissue)','MBFHgbt Means(per 100g of brain tissue)','DBFHgbt Means(per 100g of brain tissue)', 'Carotid_CVR','hydrostatic_Carotid_CVR', 'MCA_CVR','hydrostatic_MCA_CVR', 'ACA_CVR','hydrostatic_ACA_CVR', 'Carotid_stiffness', 'Carotid_distensibility', 'Systolic_carotid_velocity', 'Mean_carotid_velocity','Diastolic_carotid_Velocity', 'Systolic_carotid_diameter','Mean_carotid_diameter','Diastolic_carotid_diameter'};titlemean= {'HR', 'CO2','SBP','Hydrostatic_SBP', 'MBP','Hydrostatic_MBP', 'DBP','Hydrostatic_DBP', 'Systolic_Carotid_CBF', 'Mean_Carotid_CBF', '%CBF', 'Diastolic_Carotid_CBF','SBFHgbt Means(per 100g of brain tissue)','MBFHgbt Means(per 100g of brain tissue)','DBFHgbt Means(per 100g of brain tissue)', 'Carotid_CVR','hydrostatic_Carotid_CVR','Carotid_stiffness', 'Carotid_distensibility', 'Systolic_carotid_diameter','Mean_carotid_diameter','Diastolic_carotid_diameter'};filename = file_name(1:end-56);sheet = 1;x1Range = 'A1';x2Range = 'A2';xlswrite(filename,titlemean,sheet,x1Range);xlswrite(filename,allmeans,sheet,x2Range);